<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>conf</string>
		<string>boot</string>
	</array>
	<key>name</key>
	<string>VyOS</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Line comment, anything following a hashtag (#)</string>
			<key>match</key>
			<string>(^|^\s|\s)(#).*$
?</string>
			<key>name</key>
			<string>comment.line.number-sign.vyos</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=^|\s)(apply-groups|groups|access-profile|vlans|bridge-domains|routing-instances|dynamic-profiles|jsrc-partition|logical-systems)(?:\s{\s*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>sections that have a user-defined sub-item, but modified to capture in stanza mode. Had to be its own capture, since it covers multiple lines.</string>
			<key>end</key>
			<string>\s{|;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[-\w_&lt;&gt;:\./]+</string>
					<key>name</key>
					<string>variable.language.vyos</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Major sections of the configuration</string>
			<key>match</key>
			<string>(?&lt;=^|\s)(system|forwarding-options|routing-options|routing-instances|logical-systems|vlans|bridge-domains|dynamic-profiles|interfaces|snmp|poe|ethernet-switching-options|security)(?=[ 
;])</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>minor sections of the config.</string>
			<key>match</key>
			<string>(?&lt;=^|\s)(policy-options|protocols|chassis|firewall|applications|multi-chassis|redundant-power-system|version|services|virtual-chassis|event-options|class-of-service|access|accounting-options|diameter|fabric|multicast-snooping-options|switch-options|wlan|smtp|schedulers)(?=[ 
;])</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keywords captured without a major/minor section attached</string>
			<key>match</key>
			<string>(?&lt;=^|\s)(set|request|delete|edit|show|protect:?|inactive:|unprotect|deactivate|activate)(?= )</string>
			<key>name</key>
			<string>keyword.control.vyos</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Policy/filter denial/rejection actions</string>
			<key>match</key>
			<string>(?&lt;=\s)(deny|discard|reject|drop)(?=\s|;|$)</string>
			<key>name</key>
			<string>invalid.illegal.vyos</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Policy/filter accept/permit actions</string>
			<key>match</key>
			<string>(?&lt;=\s)(accept|permit)(?=\s|;|$)</string>
			<key>name</key>
			<string>constant.language.vyos</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Interface names</string>
			<key>match</key>
			<string>\b((((ge|et|so|fe|gr|xe|lt|vt|si|sp)(-(\d+|\*)\/(\d+|\*)\/(\d+|\*)))|(st|lo|dum|me|vme|ae)\d{1,3}|irb|vlan)(\.\d{1,5})?)(?![-_&lt;&gt;])</string>
			<key>name</key>
			<string>support.class.vyos</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>IPv4 addresses, with or without a mask</string>
			<key>match</key>
			<string>\b((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))([/]\d{1,2})?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.long.octal.vyos</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>MAC Addresses identified as a number</string>
			<key>match</key>
			<string>(?:(\b))([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})([/]\d{1,2})?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.long.octal.vyos</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.long.octal.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Unit numbers, port numbers, etc</string>
			<key>match</key>
			<string>(?:\s(?:(?:peer-)?unit|queue(?:-num)?|destination-port|source-port)[ ])((\d{1,5})(-\d{1,5})?)(?=[;]|$|\b)</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>URL Addresses, either matching character URL patterns, or http(s):// followed by an IPv4 address. </string>
			<key>match</key>
			<string>\b((https?:)|(scp:)|((s?|t?)ftp:))//((([\da-zA-Z\.-]+)\.([A-Za-z\.]{2,6}))|(\b((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\b))(([/\w\.&amp;?=+-]*)*)/?</string>
			<key>name</key>
			<string>keyword.operator.vyos</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Routing table names</string>
			<key>match</key>
			<string>(?&lt;=\s)([\w\d_-]+\.)?(inet6?|mpls|inetflow|iso|bgp\.l(2|3)vpn)\.\d{1,2}(?:\b)</string>
			<key>name</key>
			<string>keyword.operator.vyos</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=^|\s)(logical-systems|\sdynamic-profiles|\sjsrc-partition|\spartition|\sfilter input|\sfilter output|\saccess-profile|\sdscp|\sdscp-ipv6|\sexp|\sieee-802\.1|\sieee-802\.1ad|\sinet-precedence|\sscheduler-map|\sscheduler-maps|\sinput-traffic-control-profile-remaining|\sinput-traffic-control-profile|\straffic-control-profiles|\soutput-traffic-control-profile-remaining|\soutput-traffic-control-profile|\soutput-forwarding-class-map|\sscheduler-map-chassis|\sfragmentation-maps|\ssource-prefix-list|\sbridge-domains|\sgroup|\smime-pattern|\surl-pattern|\slabel-switched-path|\sadmin-groups|\scustom-url-category|\sprofile|\surl-whitelist|\surl-blacklist|\sca-profile|\sidp-policy|\sactive-policy|\sinterface-set|\sinterface-range|\scount|\sdestination-prefix-list|\sschedulers|\sdrop-profiles|\sforwarding-class|\sforwarding-class-map|\simport|\sexport|\sinstance|\sutm-policy|\sids-option|\snext-hop-group|\srouting-instances|\srule|\srule-set|\spool|\sclass|\sunit|\sport-mirror-instance|\sfrom-zone|\sto-zone|\sapply-groups|\sfile|\shost-name|\sdomain-name|\spath|\sdomain-search|\scommunity delete|\scommunity add|\scommunity set|\scommunity|\strap-group|\spolicy|\spolicy-statement|\simport-policy|\sinstance-export|\sinstance-import|\svrf-import|\svrf-export|\simport|\sexport|\skeep-import|\sinter-area-prefix-import|\sinter-area-prefix-export|\snetwork-summary-export|\snetwork-summary-import|\segress-policy|\sbootstrap-import|\sbootstrap-export|\sfilter|\sprefix-list|\sproposal|\saddress-set|\sscheduler|\srib-groups|\sgroups|\ssecurity-zone|\sterm|\sapplication|\sapplication-set|\svlans|\sgateway|\suser|\spolicer|\slsp|\scondition|\sas-path|\sas-path-group|\sservice-set)(?:\s{\s*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Stanza double-line capture for user defined arbitrary names (such as filters, policy names, prefix-lists, etc)</string>
			<key>end</key>
			<string>\s{|;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>[-\w_&lt;&gt;:\./]+</string>
					<key>name</key>
					<string>variable.language.vyos</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>User defined arbitrary names (such as filters, policy names, prefix-lists, etc)</string>
			<key>match</key>
			<string>(?&lt;=\slogical-systems|\sdynamic-profiles|\sjsrc-partition|\spartition|\sfilter input|\sfilter output|\saccess-profile|\sdscp|\sdscp-ipv6|\sexp|\sieee-802\.1|\sieee-802\.1ad|\sinet-precedence|\sscheduler-map|\sscheduler-maps|\sinput-traffic-control-profile-remaining|\sinput-traffic-control-profile|\straffic-control-profiles|\soutput-traffic-control-profile-remaining|\soutput-traffic-control-profile|\soutput-forwarding-class-map|\sscheduler-map-chassis|\sfragmentation-maps|\ssource-prefix-list|\sbridge-domains|\sgroup|\smime-pattern|\surl-pattern|\slabel-switched-path|\sadmin-groups|\scustom-url-category|\sprofile|\surl-whitelist|\surl-blacklist|\sca-profile|\sidp-policy|\sactive-policy|\sinterface-set|\sinterface-range|\scount|\sdestination-prefix-list|\sschedulers|\sdrop-profiles|\sforwarding-class|\sforwarding-class-map|\simport|\sexport|\sinstance|\sutm-policy|\sids-option|\snext-hop-group|\srouting-instances|\srule|\srule-set|\spool|\sclass|\sunit|\sport-mirror-instance|\sfrom-zone|\sto-zone|\sapply-groups|\sfile|\shost-name|\sdomain-name|\spath|\sdomain-search|\scommunity delete|\scommunity add|\scommunity set|\scommunity|\strap-group|\spolicy|\spolicy-statement|\simport-policy|\sinstance-export|\sinstance-import|\svrf-import|\svrf-export|\simport|\sexport|\skeep-import|\sinter-area-prefix-import|\sinter-area-prefix-export|\snetwork-summary-export|\snetwork-summary-import|\segress-policy|\sbootstrap-import|\sbootstrap-export|\sfilter|\sprefix-list|\sproposal|\saddress-set|\sscheduler|\srib-groups|\sgroups|\ssecurity-zone|\sterm|\sapplication|\sapplication-set|\svlans|\sgateway|\suser|\spolicer|\slsp|\scondition|\sas-path|\sas-path-group|\sservice-set)( [-\w_&lt;&gt;:\./]+)(?=[;]|\b)</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>IPv6 Addresses. This will not fully validate the structure of the IP, so some invalid IPv6 addresses might be false positives. IPv6 addresses themselves should be validated by running commands against a Junos device.</string>
			<key>match</key>
			<string>(?:\s|^)((?=.*::)(?!.*::.+::)(::)?([\dA-Fa-f]{1,4}:(:|\b)|){5}|([\dA-Fa-f]{1,4}:){6})((([\dA-Fa-f]{1,4}(::|:\b|[/]\d+|))|(?!\3\4)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?){4})([/]\d{1,3})?(?:\s|;)</string>
			<key>name</key>
			<string>constant.numeric.integer.long.octal.vyos</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.integer.long.octal.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Other general numbers</string>
			<key>match</key>
			<string>(?&lt;!term )(?&lt;=\s)(\d+)(?=[;]|\s)</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Double quoted strings</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.vyos</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.vyos</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.vyos</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Single quoted strings</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.vyos</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.vyos</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.vyos</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>string.quoted.double.vyos</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Descriptions should always look like strings, even if no quotations are needed</string>
			<key>match</key>
			<string>(?:\sdescription )([-_\w&lt;&gt;':\./\[\]]+)\b</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>text.vyos</string>
	<key>uuid</key>
	<string>a24afbf3-0a1e-4795-87c3-7bb7e582bffe</string>
</dict>
</plist>
